@page "/Shopping"
@using polichousehold.Services
@using polichousehold.Data
@using polichousehold.Models
@inject ShoppingService service
@namespace polichousehold

<PageTitle>Shopping List</PageTitle>
<AuthorizeView>
    <h1>Things for Curtis to buy on the walk home</h1>

    <table>
        <tr>
            <th>Quantity</th>
            <th>Item</th>
            <th>Image</th>
            <th>Update</th>
            <th>Delete</th>
        </tr>
        @foreach (var item in shoppinglist)
        {
            <tr>
                <td><input @bind="item.Amount" /></td>
                <td><input @bind="item.Name" /></td>
                <td>
                @if (!string.IsNullOrEmpty(item.ImagePath))
                {
                    <img src=@item.ImagePath asp-append-version="true" width="300px" />
                }
                else
                {
                    <button @onclick="() => UploadImage(item.ID)">Upload Image</button>
                }
                </td>
                <td><button @onclick="() => UpdateItem(item.ID, item.Name, item.Amount)">Update Item</button></td>
                <td><button @onclick="() => DeleteItem(item.ID)">Delete Item </button></td>
            </tr>
        } <!-- The button needs a lambda onclick to pass the arguments to the function -->
    </table>

    <p></p>
    <!-- Binding is very cool I love this feature -->
    <input type="number" placeholder="Quantity" min="1" @bind=newAmount />
    <input placeholder="Item" @bind="newItem" />
    <button @onclick="AddItem">Add to list</button>

</AuthorizeView>

@code
{
    // Empty list for the moment
    private List<ShoppingItem> shoppinglist = new List<ShoppingItem>();
    private string? newItem;
    private int newAmount;

    // Ideally this would be done asynchronously but this works for now
    protected override void OnInitialized()
    {
        // Need to instantiate on Init or it won't work
        RefreshList();
    }

    private void RefreshList()
    {
        shoppinglist = service.GetAll();
    }

    private void AddItem()
    {
        if (!string.IsNullOrEmpty(newItem) && newAmount > 0)
        {
            service.Create(new ShoppingItem { Name = newItem, Amount = newAmount});
            newItem = "";
            newAmount = 0;
            RefreshList();
        }
    }

    private void DeleteItem(int ID)
    {
        service.DeleteById(ID);
        RefreshList();
    }

    private void UpdateItem(int ID, string name, int amount)
    {
        service.Update(ID, name, amount);
        RefreshList();
    }

    private void UploadImage(int ID)
    {
        // Placeholder for image functionality
    }
}
