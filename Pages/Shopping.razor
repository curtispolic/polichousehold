@page "/Shopping"
@using polichousehold.Services
@using polichousehold.Data
@using polichousehold.Models
@inject ShoppingService service
@namespace polichousehold

<PageTitle>Shopping List</PageTitle>
<AuthorizeView>
    <h1>Things for Curtis to buy on the walk home</h1>

    <ul>
        @foreach (var item in shoppinglist)
        {
            <li>
                <input @bind="item.Amount" />
                <input @bind="item.Name" />
                <button @onclick="() => UpdateItem(item.ID, item.Name, item.Amount)">Update Item</button>
                <button @onclick="() => DeleteItem(item.ID)">Delete Item </button>
            </li>
        } <!-- The button needs a lambda onclick to pass the arguments to the function -->
    </ul>

    <!-- Binding is very cool I love this feature -->
    <input type="number" placeholder="Quantity" min="1" @bind=newAmount />
    <input placeholder="Item" @bind="newItem" />
    <button @onclick="AddItem">Add to list</button>

</AuthorizeView>

@code
{
    // Empty list for the moment
    private List<ShoppingItem> shoppinglist = new List<ShoppingItem>();
    private string? newItem;
    private int newAmount;

    // Ideally this would be done asynchronously but this works for now
    protected override void OnInitialized()
    {
        // Need to instantiate on Init or it won't work
        RefreshList();
    }

    private void RefreshList()
    {
        shoppinglist = service.GetAll();
    }

    private void AddItem()
    {
        if (!string.IsNullOrEmpty(newItem) && newAmount > 0)
        {
            service.Create(new ShoppingItem { Name = newItem, Amount = newAmount});
            newItem = "";
            newAmount = 0;
            RefreshList();
        }
    }

    private void DeleteItem(int ID)
    {
        service.DeleteById(ID);
        RefreshList();
    }

    private void UpdateItem(int ID, string name, int amount)
    {
        service.Update(ID, name, amount);
        RefreshList();
    }
}
