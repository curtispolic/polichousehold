@inject NavigationManager NavigationManager

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? AuthState { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthState!;
        if (authState?.User?.Identity == null || !authState.User.Identity.IsAuthenticated)
        {
            var returnUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
            if (string.IsNullOrEmpty(returnUrl))
                NavigationManager.NavigateTo("/Identity/Account/Login", true);
            else
                NavigationManager.NavigateTo("/Identity/Account/Login?returnUrl=" + returnUrl, true);
        }
    }
}